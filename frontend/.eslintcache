[{"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Cities.js":"4","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Home.js":"6","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Botones.js":"7","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Carousell.js":"8","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Slide.js":"9","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\rootreducer.js":"10","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"11","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js":"12","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\City.js":"13","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Itinerary.js":"14","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js":"15","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js":"16","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Register.js":"17","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\LogIn.js":"18","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\authActions.js":"19","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js":"20","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Comment.js":"21"},{"size":571,"mtime":1612146574205,"results":"22","hashOfConfig":"23"},{"size":2160,"mtime":1612748121264,"results":"24","hashOfConfig":"23"},{"size":190,"mtime":1610849087806,"results":"25","hashOfConfig":"23"},{"size":3048,"mtime":1612838951885,"results":"26","hashOfConfig":"23"},{"size":2209,"mtime":1612743750824,"results":"27","hashOfConfig":"23"},{"size":1033,"mtime":1611510494004,"results":"28","hashOfConfig":"23"},{"size":509,"mtime":1611517667590,"results":"29","hashOfConfig":"23"},{"size":2836,"mtime":1611087977030,"results":"30","hashOfConfig":"23"},{"size":2004,"mtime":1611511191005,"results":"31","hashOfConfig":"23"},{"size":336,"mtime":1612650562189,"results":"32","hashOfConfig":"23"},{"size":761,"mtime":1612042062574,"results":"33","hashOfConfig":"23"},{"size":1015,"mtime":1612835688226,"results":"34","hashOfConfig":"23"},{"size":2687,"mtime":1612984062957,"results":"35","hashOfConfig":"23"},{"size":3751,"mtime":1613026612270,"results":"36","hashOfConfig":"23"},{"size":735,"mtime":1613017446260,"results":"37","hashOfConfig":"23"},{"size":2252,"mtime":1613026990267,"results":"38","hashOfConfig":"23"},{"size":4410,"mtime":1612996390924,"results":"39","hashOfConfig":"23"},{"size":2894,"mtime":1612802461498,"results":"40","hashOfConfig":"23"},{"size":3295,"mtime":1612988988794,"results":"41","hashOfConfig":"23"},{"size":877,"mtime":1612988535166,"results":"42","hashOfConfig":"23"},{"size":1565,"mtime":1613044725789,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"rkct7v",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\index.js",[],["92","93"],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\App.js",["94"],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Header\"\nimport Home from \"./components/Home\"\nimport Cities from \"./components/Cities\"\nimport Footer from \"./components/Footer\"\nimport City from \"./components/City\"\nimport './App.css';\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\"\nimport LogIn from \"./components/LogIn\";\nimport Register from \"./components/Register\";\nimport { connect } from \"react-redux\"\nimport authActions from \"./redux/actions/authActions\"\n\n// condicional para evaluar si hay usuario logueado ve todo excepto login y register, sino, ve todo y además puede acceder a login y register\n// con esto protegemos rutas a nivel frontend\n\nconst App = (props) => {\n  if (props.usuarioLogueado) {\n    var routes =\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/cities\" component={Cities} />\n        <Route path=\"/city/:id\" component={City} />\n        <Redirect to=\"/\" />\n      </Switch>\n  } else if(localStorage.getItem(\"token\")){\n    props.logLocalStorage(localStorage.getItem(\"userName\"),localStorage.getItem(\"picture\"),localStorage.getItem(\"token\"))\n\n  }else{\n    var routes =\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/cities\" component={Cities} />\n      <Route path=\"/city/:id\" component={City} />\n      <Route path=\"/login\" component={LogIn} />\n      <Route path=\"/signup\" component={Register} />\n      <Redirect to=\"/\" />\n    </Switch>\n\n  }\n  return (\n    //Router con sus Route para rutear cada componente, \n    //indicando en el primer Route: cuando el path sea exactamente \"/\" render el componente Home\n    <>\n      <BrowserRouter>\n        <Header />\n        <Switch>\n        {routes}\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </>\n  );\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usuarioLogueado: state.auth.usuarioRegistrado\n  }\n}\nconst mapDispatchToProps = {\n  logLocalStorage: authActions.logFromLocalStorage\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Cities.js",["95","96"],"import { Link } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport citiesActions from \"../redux/actions/citiesActions\"\r\n\r\nexport const Cities = (props) => {\r\n\r\n    useEffect(() => { // hooks equiv func a componenteDidMount/DidUpdate y WillUnmount en comp de clase\r\n        // función que se ejecuta cuando el componente se monta y cada vez que se actualiza\r\n        props.allCities()\r\n    }, [])\r\n\r\n    const search = e => { // acá capturo el evento y modifico el estado de citiesFilter\r\n        props.filtro(e.target.value)\r\n    }\r\n\r\n    return (\r\n\r\n        <section>\r\n            <div className=\"filter\">\r\n                <input onChange={search} type=\"text\" placeholder=\"Search City\" ></input>\r\n            </div>\r\n            {props.citiesFiltradas.length === 0 ?\r\n                <Link to={`/`} style={{ textDecoration: \"none\" }}>\r\n                    <div className=\"alert\" style={{\r\n                        backgroundImage: `url(\"../assets/fondoHuellas.jpg\"`,\r\n                        width: \"40vw\", height: \"60vh\"\r\n                    }}>\r\n                        <div className=\"alertTitle\"><p>Oops! we still haven't traveled to that city</p></div>\r\n                    </div> </Link>\r\n\r\n                :\r\n                <div className=\"contenedorCities\">\r\n                    {props.citiesFiltradas.map(({ cityName, cityPic, _id }) => { // Mapeo array de objetos con información de cada ciudad                      \r\n                        return (\r\n\r\n                            <Link key={_id} className=\"cities\" to={`/city/${_id}`} style={{ textDecoration: \"none\" }}>\r\n                                <div className=\"citiesImage\" style={{\r\n                                    backgroundImage: `url(\"${cityPic}\")`\r\n                                }}><p className=\"citiesTitle\">{cityName} </p>\r\n                                </div>\r\n                            </Link>\r\n\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // objeto con las propiedades que reciben las props del state (reducer)\r\n    return {\r\n        listaCities: state.cities.listaCities,\r\n        citiesFiltradas: state.cities.citiesFiltradas\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    //objeto con las propiedades que reciben las props de las funciones en action \r\n    allCities: citiesActions.allCities,\r\n    filtro: citiesActions.filter\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)\r\n\r\n\r\n\r\n// REACT SE ASEGURA QUE EL DOM SE HA ACTUALIZADO ANTES DE LLEVAR A CABO LAS HOOKS\r\n// ESTA función que pasamos es nuestro efecto Y Dentro de nuestro efecto actualizamos Usando la API del navegador \r\n// Cuando React renderiza nuestro componente, recordará este efecto y lo ejecutará después de actualizar el DOM.\r\n//Esto sucede en cada renderizado, incluyendo el primero.\r\n//recordar que STATE ES UN OBJETO QUE PERMITE DINAMIZAR A REACT EL RENDERIZADO\r\n//","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Header.js",["97"],"import { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport authActions from \"../redux/actions/authActions\"\r\n\r\nconst Header = (props) => {\r\n    if (props.usuarioRegistrado) {\r\n        var links =\r\n            <>\r\n                <Link to=\"/login\">\r\n                    <div className=\"user\" style={{\r\n                        backgroundImage: `url(${props.usuarioRegistrado.picture})`,\r\n                        width: \"50px\", height: \"50px\"\r\n                    }}></div>\r\n                </Link>\r\n                <Link to=\"/\" className=\"header\" style={{\r\n                    textDecoration: \"none\"\r\n                }} onClick={() => props.logoutUser()}><p>LogOut, {props.usuarioRegistrado.userName}</p></Link> \r\n                <Link to=\"/home\" style={{\r\n                    textDecoration: \"none\"\r\n                }} ><p> Main </p>\r\n                </Link>\r\n                <Link to=\"/cities\" style={{\r\n                    textDecoration: \"none\"\r\n                }}><p>Cities</p>\r\n                </Link>\r\n            </>\r\n    } else {\r\n        var links =\r\n            <>\r\n                <Link to=\"/login\">\r\n                    <div className=\"user\" style={{\r\n                        backgroundImage: `url(\"./assets/unknowfem.png\")`,\r\n                        width: \"50px\", height: \"50px\"\r\n                    }}></div>\r\n                </Link>\r\n                <Link to=\"/home\" style={{\r\n                    textDecoration: \"none\"\r\n                }} ><p> Main </p>\r\n                </Link>\r\n                <Link to=\"/cities\" style={{\r\n                    textDecoration: \"none\"\r\n                }}><p>Cities</p>\r\n                </Link>\r\n            </>\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                <nav>\r\n                    <div className=\"header\">\r\n                        {links}\r\n\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usuarioRegistrado: state.auth.usuarioRegistrado\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logoutUser: authActions.logoutUser\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header)\r\n","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Home.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Botones.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Carousell.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Slide.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\rootreducer.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js",["98","99"],"// reducer para mis cities \r\n\r\nconst initialState ={\r\n    listaCities:[],\r\n    citiesFiltradas:[],\r\n\r\n} // objeto que contiene mi estado inicial \r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n\r\n    // condicional switch para evaluar qué action llega y en base a eso qué hará el reducer\r\n    switch(action.type) { // evalua a partir del tipo de la action: action.type\r\n         case \"ALL_CITIES\":\r\n          \r\n             return{\r\n                 ...state,\r\n                 listaCities: action.payload,\r\n                 citiesFiltradas: action.payload             \r\n             }\r\n             break\r\n             case \"FILTER_CITY\" :\r\n                 return {\r\n                    ...state,\r\n                    citiesFiltradas: state.listaCities.filter(city => city.cityName.toLowerCase().indexOf(action.payload.toLowerCase().trim()) === 0)\r\n                  }\r\n                  break\r\n             default:\r\n                return state\r\n    }\r\n}\r\n\r\n\r\nexport default citiesReducer \r\n\r\n ","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\City.js",["100"],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Itinerary.js",["101"],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Register.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\LogIn.js",["102"],"import { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport GoogleLogin from 'react-google-login'\r\n\r\nconst LogIn = (props) => {\r\n    const [logueo, setLogueo] = useState({})\r\n    const [err, setErr] = useState([])\r\n\r\n\r\n    const capturaInputLogIn = e => {\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setLogueo({\r\n            ...logueo,\r\n            [campo]: valor\r\n        })\r\n    }\r\n\r\n\r\n    const validaGo = async e => {\r\n        e.preventDefault()\r\n        if (logueo.userName === \"\" || logueo.pasword === \"\") {\r\n            alert(\"Completar todos los campos con (*)\")\r\n            return false\r\n        }\r\n\r\n        setErr([])\r\n\r\n        const responseBE = await props.loginUser(logueo)\r\n        // paso la nueva cuenta a través de la función registerUser que despacha mi userAction\r\n        if (responseBE && !responseBE.success) {\r\n            setErr([responseBE.mensaje])\r\n        } else {\r\n            alert(\"Bienvenido/a\" + \" \" + logueo.userName)\r\n        }\r\n\r\n    }\r\n    const responseGoogle = async (response) => {\r\n        if (response.error) {\r\n            alert(\"Hubo un error con la autenticación en Google\")\r\n        } else {\r\n            const responseBE = await props.loginUser({\r\n                userName: response.profileObj.email,\r\n                password: response.profileObj.googleId,\r\n            })\r\n\r\n            if (responseBE && !responseBE.success) {\r\n                setErr([responseBE.mensaje])\r\n            } else {\r\n                alert(\"Bienvenido/a \")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <h1>LOGIN</h1>\r\n            <input type=\"text\" name=\"userName\" placeholder=\"UserName (*)\" onChange={capturaInputLogIn} />\r\n            <input type=\"password\" name=\"password\" placeholder=\"Password (*)\" onChange={capturaInputLogIn} />\r\n            <button onClick={validaGo}>GO!</button>\r\n\r\n            <div className=\"form\">\r\n                {err.map(error => <h2>{error}</h2>)}\r\n            </div>\r\n            <GoogleLogin\r\n                clientId=\"754177178799-o1hb0r394koiniduanlj695jlpec4gvg.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <p>Don't have account? Create one here!</p>\r\n            <Link to=\"/signup\"> <p>Create Account</p></Link>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usuarioLogueado: state.auth.usuarioRegistrado\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loginUser: authActions.loginUser\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn)","C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\Luxis\\Desktop\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Comment.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":31,"column":9,"nodeType":"109","messageId":"110","endLine":31,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":2,"column":21,"nodeType":"109","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":11,"column":8,"nodeType":"116","endLine":11,"endColumn":10,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":28,"column":13,"nodeType":"109","messageId":"110","endLine":28,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":20,"column":14,"nodeType":"121","messageId":"122","endLine":20,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":26,"column":19,"nodeType":"121","messageId":"122","endLine":26,"endColumn":24},{"ruleId":"114","severity":1,"message":"123","line":17,"column":8,"nodeType":"116","endLine":17,"endColumn":10,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":5,"column":17,"nodeType":"109","messageId":"113","endLine":5,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":36,"column":34,"nodeType":"128","messageId":"129","endLine":36,"endColumn":35},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-redeclare","'routes' is already defined.","Identifier","redeclared","no-unused-vars","'useState' is defined but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["132"],"'links' is already defined.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["133"],"'useEffect' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [props]",{"range":"138","text":"139"},"Update the dependencies array to be: [id, props]",{"range":"140","text":"141"},[457,459],"[props]",[604,606],"[id, props]"]