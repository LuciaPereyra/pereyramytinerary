[{"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\index.js":"1","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\App.js":"2","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\rootreducer.js":"3","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Home.js":"4","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Cities.js":"5","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Footer.js":"6","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Header.js":"7","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\LogIn.js":"8","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Register.js":"9","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\City.js":"10","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\authActions.js":"11","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js":"12","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js":"13","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js":"14","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Botones.js":"15","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Carousell.js":"16","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js":"17","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Itinerary.js":"18","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"19","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Slide.js":"20","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Comment.js":"21"},{"size":638,"mtime":1618595026000,"results":"22","hashOfConfig":"23"},{"size":2079,"mtime":1618697430000,"results":"24","hashOfConfig":"23"},{"size":336,"mtime":1612650564000,"results":"25","hashOfConfig":"23"},{"size":751,"mtime":1618926560000,"results":"26","hashOfConfig":"23"},{"size":2661,"mtime":1618979296000,"results":"27","hashOfConfig":"23"},{"size":190,"mtime":1610849088000,"results":"28","hashOfConfig":"23"},{"size":2317,"mtime":1618201570000,"results":"29","hashOfConfig":"23"},{"size":3240,"mtime":1618725452000,"results":"30","hashOfConfig":"23"},{"size":5376,"mtime":1618725358000,"results":"31","hashOfConfig":"23"},{"size":2433,"mtime":1618979642000,"results":"32","hashOfConfig":"23"},{"size":3954,"mtime":1618722718000,"results":"33","hashOfConfig":"23"},{"size":978,"mtime":1618697474000,"results":"34","hashOfConfig":"23"},{"size":751,"mtime":1618594954000,"results":"35","hashOfConfig":"23"},{"size":944,"mtime":1618594936000,"results":"36","hashOfConfig":"23"},{"size":858,"mtime":1618892456000,"results":"37","hashOfConfig":"23"},{"size":2796,"mtime":1618594674000,"results":"38","hashOfConfig":"23"},{"size":2513,"mtime":1618594872000,"results":"39","hashOfConfig":"23"},{"size":5460,"mtime":1618969514000,"results":"40","hashOfConfig":"23"},{"size":656,"mtime":1618594854000,"results":"41","hashOfConfig":"23"},{"size":2007,"mtime":1614376490000,"results":"42","hashOfConfig":"23"},{"size":1073,"mtime":1618594722000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"cr9vkn",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\index.js",[],["97","98"],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\App.js",["99"],"import React from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Home from \"./components/Home\"\r\nimport Cities from \"./components/Cities\"\r\nimport Footer from \"./components/Footer\"\r\nimport City from \"./components/City\"\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\"\r\nimport LogIn from \"./components/LogIn\";\r\nimport Register from \"./components/Register\";\r\nimport { connect } from \"react-redux\"\r\nimport authActions from \"./redux/actions/authActions\"\r\n\r\n\r\n// condicional para evaluar si hay usuario logueado ve todo excepto login y register, sino, ve todo y además puede acceder a login y register\r\n// con esto protegemos rutas a nivel frontend\r\n\r\nconst App = ({usuarioLogueado,logLocalStorage}) => {\r\n  if (usuarioLogueado) {\r\n    var routes =\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/cities\" component={Cities} />\r\n        <Route path=\"/city/:id\" component={City} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n  } else if(localStorage.getItem(\"token\")){\r\n    logLocalStorage(localStorage.getItem(\"firstName\"),localStorage.getItem(\"urlPic\"),localStorage.getItem(\"token\"),localStorage.getItem(\"idUser\"))\r\n\r\n  }else{\r\n    var routes =\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/home\" component={Home} />\r\n      <Route path=\"/cities\" component={Cities} />\r\n      <Route path=\"/city/:id\" component={City} />\r\n      <Route path=\"/login\" component={LogIn} />\r\n      <Route path=\"/signup\" component={Register} />\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n        {routes}\r\n        </Switch>\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    usuarioLogueado: state.auth.usuarioRegistrado\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  logLocalStorage: authActions.logFromLocalStorage\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\rootreducer.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Home.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Cities.js",["100","101"],"import { Link } from \"react-router-dom\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport citiesActions from \"../redux/actions/citiesActions\"\r\n\r\nexport const Cities = (props) => {\r\n\r\n    const { citiesFiltradas, allCities, filtro } = props\r\n\r\n    useEffect(() => { // hooks equiv func a componenteDidMount/DidUpdate y WillUnmount en comp de clase\r\n        // función que se ejecuta cuando el componente se monta y cada vez que se actualiza\r\n        allCities()\r\n\r\n    }, [])\r\n\r\n    const search = e => { // acá capturo el evento y modifico el estado de citiesFilter\r\n        filtro(e.target.value)\r\n    }\r\n// style={{\r\n    // backgroundImage: `url(\"../assets/abstractVert.jpg\")`\r\n    return (\r\n\r\n        <section className=\"section\" >\r\n            <div className=\"filter\">\r\n                <input onChange={search} type=\"text\" placeholder=\"Search City\" ></input>\r\n            </div>\r\n            {citiesFiltradas.length === 0 ?\r\n                <Link to={`/`} style={{ textDecoration: \"none\" }}>\r\n                    <div className=\"alert\" style={{\r\n                        backgroundImage: `url(\"../assets/fondoHuellas.jpg\"`,\r\n                        width: \"40vw\", height: \"60vh\"\r\n                    }}>\r\n                        <div className=\"alertTitle\"><p>Oops! we still haven't traveled to that city</p></div>\r\n                    </div> </Link>\r\n                :\r\n                <div className=\"contenedorCities\">\r\n                    {citiesFiltradas.map(({ cityName, cityPic, _id }) => { // Mapeo array de objetos con información de cada ciudad                      \r\n                        return (\r\n                            <Link key={_id} className=\"cities\" to={`/city/${_id}`} style={{ textDecoration: \"none\" }}>\r\n                                <div className=\"citiesImage\" style={{\r\n                                    backgroundImage: `url(\"${cityPic}\")`\r\n                                }}><p className=\"citiesTitle\">{cityName} </p>\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // objeto con las propiedades que reciben las props del state (reducer)\r\n    return {\r\n        citiesFiltradas: state.cities.citiesFiltradas\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    //objeto con las propiedades que reciben las props de las funciones en action \r\n    allCities: citiesActions.allCities,\r\n    filtro: citiesActions.filter\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities)\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Footer.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Header.js",["102"],"import { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport authActions from \"../redux/actions/authActions\"\r\n\r\nconst Header = ({usuarioRegistrado,logoutUser}) => {\r\n    if (usuarioRegistrado) {\r\n        var links =\r\n            <>\r\n            <div className=\"contenedorUser\" >\r\n                <Link to=\"/login\">\r\n                    <div className=\"user\" style={{\r\n                        backgroundImage: `url(${usuarioRegistrado.urlPic})`,\r\n                    }}></div>\r\n                </Link>\r\n                <Link to=\"/\" onClick={() => logoutUser()}>\r\n                    <p>LogOut, {usuarioRegistrado.firstName}</p>\r\n                </Link>\r\n            </div>\r\n\r\n                <div className=\"menuNav\">\r\n                    <Link to=\"/home\" style={{\r\n                        textDecoration: \"none\"\r\n                    }} ><p> Main </p>\r\n                    </Link>\r\n                    <Link to=\"/cities\" style={{\r\n                        textDecoration: \"none\"\r\n                    }}><p>Cities</p>\r\n                    </Link>\r\n                </div>\r\n            </>\r\n    } else {\r\n        var links =\r\n            <>\r\n                <Link to=\"/login\">\r\n                    <div className=\"user\" style={{\r\n                        backgroundImage: `url(\"./assets/unknowfem.png\")`,\r\n                    }}></div>\r\n                </Link>\r\n                <div className=\"menuNav\">\r\n                    <Link to=\"/home\" style={{\r\n                        textDecoration: \"none\"\r\n                    }} ><p> Main </p>\r\n                    </Link>\r\n                    <Link to=\"/cities\" style={{\r\n                        textDecoration: \"none\"\r\n                    }}><p>Cities</p>\r\n                    </Link>\r\n                </div>\r\n\r\n            </>\r\n    }\r\n    return (\r\n        <>\r\n            <header>\r\n                <nav>\r\n                    <div className=\"header\">\r\n                        {links}\r\n\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usuarioRegistrado: state.auth.usuarioRegistrado\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logoutUser: authActions.logoutUser\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\LogIn.js",["103","104","105"],"import { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { FaEye } from \"react-icons/fa\";\r\n\r\nconst LogIn = ({ loginUser }) => {\r\n    const [logueo, setLogueo] = useState({})\r\n    const [err, setErr] = useState([])\r\n    const [hidden, setHidden] = useState(true)\r\n\r\n    const capturaInputLogIn = e => {\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setLogueo({\r\n            ...logueo,\r\n            [campo]: valor\r\n        })\r\n    }\r\n    const enterKeyboard = e => {\r\n        //El numero 13 seria la tecla enter, si fue presionada envio la validacion\r\n        //como si fuera el boton sign in\r\n        if (e.charCode === 13) {\r\n            validaGo(e)\r\n        }\r\n    }\r\n    const validaGo = async e => {\r\n        e.preventDefault()\r\n        if (logueo.userName === \"\" || logueo.pasword === \"\") {\r\n            alert(\"Complete all fields\")\r\n            return false\r\n        }\r\n        setErr([])\r\n        const response = await loginUser(logueo)\r\n        // paso la nueva cuenta a través de la función registerUser que despacha mi userAction\r\n        if (response && !response.success) {\r\n            setErr([response.mensaje])\r\n        } else {\r\n            alert(`Hi ${logueo.userName} !`, 3000)\r\n        }\r\n    }\r\n    const responseGoogle = async (response) => {\r\n        if (response.error) {\r\n            console.log(response.error)\r\n            alert('Error in Google authentication', 3000)\r\n        } else {\r\n            const response = await loginUser({\r\n                userName: response.profileObj.email,\r\n                password: `Aa${response.profileObj.googleId}`,\r\n                google: 'true'\r\n            })\r\n\r\n            if (response && !response.success) {\r\n                setErr([response.mensaje])\r\n            } else {\r\n                alert(`Hi${logueo.userName} !`, 3000)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"formContainer\">\r\n        <div className=\"form\">\r\n            <h1>LOGIN</h1>\r\n            <input type=\"text\" name=\"userName\" placeholder=\"UserName (*)\" onChange={capturaInputLogIn} />\r\n            <div className=\"inputDiv\">\r\n                <input onKeyPress={enterKeyboard} type={hidden ? \"password\" : \" text\"} name=\"password\" placeholder=\"Password\" onChange={capturaInputLogIn} />\r\n                < FaEye className=\"eye\" onClick={() => setHidden(!hidden)} />\r\n            </div>\r\n            <button onClick={validaGo}>GO!</button>\r\n            <GoogleLogin\r\n                clientId=\"754177178799-o1hb0r394koiniduanlj695jlpec4gvg.apps.googleusercontent.com\"\r\n                buttonText=\"Sign in with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <p>Don't have account? Create one here!</p>\r\n            <Link to=\"/signup\"> <p>Create Account</p></Link>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loginUser: authActions.loginUser\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(LogIn)","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Register.js",["106","107","108","109","110","111","112"],"import { connect } from \"react-redux\"\r\nimport { useState } from \"react\"\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport GoogleLogin from 'react-google-login'\r\nimport { FaEye } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst countries = require('../data/dataContryNames.json')\r\n\r\nconst Register = ({ registerUser }) => {\r\n\r\n    const [newCount, setNewCount] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        userName: '',\r\n        email: '',\r\n        password: '',\r\n        country: '',\r\n        google: 'false'\r\n    })\r\n    const [errores, setErrores] = useState([])\r\n    const [hidden, setHidden] = useState(true)\r\n\r\n    const failedInputs = {\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        password: null,\r\n        country: null,\r\n        useremailExist: null\r\n    }\r\n\r\n    const capturaInputRegister = e => {\r\n        const valor = e.target.value\r\n        const campo = e.target.name\r\n        setNewCount({\r\n            ...newCount,\r\n            [campo]: valor\r\n        })\r\n    }\r\n\r\n    const validaInputRegister = async e => {\r\n        e.preventDefault()// previene que no recargue página\r\n        if (newCount.firstName === '' || newCount.lastName === '' || newCount.userName === '' || newCount.email === '' || newCount.password === '' || newCount.country === '') {\r\n            alert('Complete all fields', 3000)\r\n            return false\r\n            // se va de la función y no sigue\r\n        }\r\n        setErrores([])\r\n        const response = await registerUser(newCount)\r\n        // paso la nueva cuenta a través de la función registerUser que despacha mi userAction\r\n        if (response && !response.success) {\r\n            response.response.map(error => {\r\n                failedInputs[error.label] = error.message\r\n                return false\r\n            })\r\n            setErrores(failedInputs)\r\n        }\r\n    }\r\n\r\n    const responseGoogle = async (response) => {\r\n        if (response.error) {\r\n            alert('Error in Google authentication', 3000)\r\n        } else {\r\n            const response = await registerUser({\r\n                firstName: response.profileObj.givenName,\r\n                lastName: response.profileObj.familyName,\r\n                userName: response.profileObj.email,\r\n                email: response.profileObj.email,\r\n                password: `Aa${response.profileObj.googleId}`,\r\n                urlPic: response.profileObj.imageUrl,\r\n                country: 'Argentina',\r\n                google: 'true'\r\n            })\r\n            if (response && !response.success) {\r\n                setErrores(response.errores.details)\r\n            } else {\r\n                alert('Create account', 3000)\r\n            }\r\n        }\r\n    }\r\n    const pressEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            validaInputRegister()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"formContainer\">\r\n            <h1>Create Account</h1>\r\n            <div className=\"form\">\r\n\r\n                <small>{errores.firstName}</small>\r\n                <input type=\"text\" name=\"firstName\" placeholder=\"FirstName \" onChange={capturaInputRegister} />\r\n                <small>{errores.lastName}</small>\r\n                <input type=\"text\" name=\"lastName\" placeholder=\"LastName\" onChange={capturaInputRegister} />\r\n                <small>{errores.userName || errores.useremailExist}</small>\r\n                <input type=\"text\" name=\"userName\" placeholder=\"UserName\" onChange={capturaInputRegister} />\r\n                <small>{errores.email}</small>\r\n                <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={capturaInputRegister} />\r\n                <div className=\"inputDiv\">\r\n                    <small>{errores.password}</small>\r\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" type={hidden ? 'password' : 'text'} onKeyDown={pressEnter} onChange={capturaInputRegister} />\r\n                    < FaEye className=\"eye\" onClick={() => setHidden(!hidden)} />\r\n                </div>\r\n                <small>{errores.urlPic}</small>\r\n                <input type=\"text\" name=\"urlPic\" placeholder=\"Picture\" onChange={capturaInputRegister} />\r\n                <select onChange={capturaInputRegister} name=\"country\">\r\n                    <option value='' disabled selected>Select Country</option>\r\n                    {countries.map((country, i) => {\r\n                        return (\r\n                            <option key={i} value={country.value}>{country.label}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n\r\n                <button onClick={validaInputRegister}>Register</button>\r\n                <Link to=\"/login\"> <p>Do you have a registered Google account?</p></Link>\r\n                <GoogleLogin\r\n                    clientId=\"754177178799-o1hb0r394koiniduanlj695jlpec4gvg.apps.googleusercontent.com\"\r\n                    buttonText='Sign in with Google'\r\n                    onSuccess={responseGoogle}\r\n                    onFailure={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    registerUser: authActions.registerUser\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(Register)\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\City.js",["113"],"import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport Itinerary from \"./Itinerary\"\r\nimport itineraryActions from \"../redux/actions/itineraryActions\"\r\n\r\n\r\nexport const City = (props) => { // props URL \r\n\r\n    const { listaCities, listItineraries, itinerariesById } = props\r\n\r\n    const [city, setCity] = useState([])\r\n    const id = props.match.params.id// captura id que le pasan por url (cuando hacen click en la foto)\r\n\r\n    useEffect(() => {\r\n        const cityFind = listaCities.find(item => item._id === id)\r\n        setCity(cityFind)\r\n        itinerariesById(id)\r\n        window.scroll({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        })\r\n        listaCities.length === 0 && props.history.push('/cities')\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"section\" >\r\n            <div className=\"contenedorCity\">\r\n                <div className=\"cityImage\" style={{\r\n                    backgroundImage: `url(\"${city.cityPic}\")`\r\n                }}><p className=\"cityTitle\">{city.cityName}</p>\r\n                </div>\r\n                <h5 className=\"titleAvailable\">Available MYtineraries: </h5>\r\n\r\n                {(listItineraries.length === 0) ?\r\n\r\n                    <div className=\"alert\" style={{\r\n                        backgroundImage: `url(\"../assets/fondoHuellas.jpg\"`,\r\n                        width: \"40vw\", height: \"40vh\"\r\n                    }}>  <div className=\"alertTitle\"> <p>Oops! there are no itineraries to show</p></div>\r\n                    </div>\r\n\r\n                    : <div className=\"itinerary\">\r\n                        {listItineraries.map(itineraries => <Itinerary key={itineraries._id} itineraries={itineraries} id={id} />)}\r\n\r\n                    </div>\r\n                }\r\n\r\n                <Link className=\"linkItineraries\" to=\"/cities\"\r\n                    style={{ textDecoration: \"none\" }}> <img src=\"../assets/Arrowleft.png\" alt=\"\" />Back to Cities!\r\n                </Link>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listaCities: state.cities.citiesFiltradas,\r\n        listItineraries: state.itinerary.listaItinerarios\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    itinerariesById: itineraryActions.itinerariesById\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(City)\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\authActions.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\itineraryReducer.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js",["114","115"],"// reducer para mis cities \r\n\r\nconst initialState = {\r\n    listaCities: [],\r\n    citiesFiltradas: [],\r\n\r\n} // objeto que contiene mi estado inicial \r\n\r\nconst citiesReducer = (state = initialState, action) => {\r\n    // condicional switch para evaluar qué action llega y en base a eso qué hará el reducer\r\n    switch (action.type) { // evalua a partir del tipo de la action: action.type\r\n        case \"ALL_CITIES\":\r\n            return {\r\n                ...state,\r\n                listaCities: action.payload,\r\n                citiesFiltradas: action.payload\r\n            }\r\n            break\r\n        case \"FILTER_CITY\":\r\n            return {\r\n                ...state,\r\n                citiesFiltradas: state.listaCities.filter(city => city.cityName.toLowerCase().indexOf(action.payload.toLowerCase().trim()) === 0)\r\n            }\r\n            break\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default citiesReducer\r\n\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Botones.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Carousell.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\itineraryActions.js",["116"],"import axios from \"axios\"\r\nimport { MdInsertDriveFile } from \"react-icons/md\"\r\n\r\nconst itineraryActions = {\r\n  itinerariesById: (id) => {\r\n    return async (dispatch, getState) => {\r\n      const data = await axios.get(`https://mytineraryy.herokuapp.com/api/itinerary/${id}`)\r\n      dispatch({ type: \"ALL_ITINERARIES\", payload: data.data.respuesta })\r\n    }\r\n  },\r\n\r\n  addFav: (id) => {\r\n    console.log(id + \" entra en action Addfav\")\r\n    return async (dispatch, getState) => {\r\n      const token = getState().auth.usuarioRegistrado ? getState().auth.usuarioRegistrado.token : \"\"\r\n      try {\r\n        const data = await axios.put(`http://localhost:4000/api/itinerary/like/${id}`, {},\r\n          {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n          })\r\n        dispatch({ type: 'FAV_ITINERARY', payload: data.data.response })\r\n        if (!data.data.response.success) {\r\n          return data.data.response\r\n        }\r\n      } catch (error) {\r\n        if (error.response === 401)\r\n          alert(\"No está autorizado a crear nuevo usuario\")\r\n      }\r\n    }\r\n  },\r\n\r\n  unFav: (id) => {\r\n    console.log(id + \"action unfav\")\r\n    return async (dispatch, getState) => {\r\n      const token = getState().auth.usuarioRegistrado ? getState().auth.usuarioRegistrado.token : \"\"\r\n      try {\r\n        const data = await axios.put(`http://localhost:4000/api/itinerary/unlike/${id}`, {},\r\n          { headers: { Authorization: `Bearer ${token}` } })\r\n        dispatch({ type: 'FAV_ITINERARY', payload: data.data.response })\r\n        if (!data.data.response.success) {\r\n          return data.data.response\r\n        }\r\n      } catch (error) {\r\n        if (error.response === 401) {\r\n          alert(\"No está autorizado a crear nuevo usuario\")\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  itineraryComment: (newComment) => {\r\n    return async (dispatch, getState) => {\r\n      const token = getState().auth.usuarioRegistrado ? getState().auth.usuarioRegistrado.token : \"\"\r\n      try {\r\n        const data = await axios.put(`http://localhost:4000/api/itinerary`, { newComment }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        })\r\n        dispatch({ type: \"ITIN_COMMENT\", payload: data.data.response })\r\n        if (!data.data.response.success) {\r\n          return data.data.response\r\n        }\r\n      } catch (error) {\r\n        if (error.response === 401) {\r\n          alert(\"No está autorizado a crear nuevo usuario\")\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n}\r\n\r\nexport default itineraryActions","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Itinerary.js",["117"],"import Comment from \"./Comment\";\r\nimport itineraryActions from '../redux/actions/itineraryActions';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { MdSend, MdAttachMoney, MdTimer } from \"react-icons/md\";\r\nimport { Alert } from 'reactstrap';\r\n\r\n\r\nconst Itinerary = (props) => {\r\n    const { commentarie, usuarioRegistrado, itineraries, addFav, itinerariesById, unFav, id } = props\r\n    // id= cityId\r\n    // _id= idItinerario\r\n\r\n    const [visible, setVisible] = useState(false)\r\n    const [newComment, setNewComment] = useState('')\r\n    const button = () => setVisible(!visible)\r\n\r\n    useEffect(() => {\r\n        window.scroll({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        })\r\n    }, [])\r\n\r\n\r\n    const sumaLike = async (e) => {\r\n        e.preventDefault()\r\n        console.log(\"sumalike\")\r\n        await addFav(itineraries._id)\r\n        itinerariesById(id)\r\n    }\r\n\r\n    const restaLike = async (e) => {\r\n        e.preventDefault()\r\n        console.log(\"restalike\")\r\n        await unFav(itineraries._id)\r\n        itinerariesById(id)\r\n    }\r\n\r\n    const addComments = (e) => { // acá capturo el evento \r\n        e.preventDefault()\r\n        setNewComment(\r\n            (e.target.value)\r\n        )\r\n    }\r\n\r\n    const sendComment = async e => {\r\n        e.preventDefault()\r\n\r\n        await commentarie({\r\n            idItinerary: itineraries._id,\r\n            comment: newComment,\r\n        })\r\n        setNewComment('')\r\n    }\r\n\r\n    const alerta = () => {\r\n        console.log(\"llega funcion?np\")\r\n        return (\r\n\r\n            <Alert color=\"primary\">\r\n                Debes loguearte para dejar tu Like!\r\n            </Alert>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"containerItinerary\">\r\n            <div className=\"containerImg\">\r\n                <div className=\"userImg\" style={{\r\n                    backgroundImage: `url(\"${itineraries.userPic}\")`\r\n                }}> </div>{itineraries.userName}</div>\r\n            <div className=\"containerTextItin\">\r\n                <div className=\"itinTitle\">{itineraries.title}</div>\r\n\r\n                <div className=\"itinLikes\">\r\n\r\n                    {usuarioRegistrado\r\n                        ? itineraries.likes.length !== 0\r\n                            ? itineraries.likes.map((userLike, i) => {\r\n                                if (userLike === usuarioRegistrado.idUser) {\r\n                                    return <div><i onClick={restaLike} className=\"fas fa-heart\"></i>{itineraries.likes.length}</div>\r\n                                }\r\n                                else {\r\n                                    if (i === itineraries.likes.length)\r\n                                        return <div><i onClick={sumaLike} className=\"far fa-heart\"></i>{itineraries.likes.length}</div>\r\n                                }\r\n                            })\r\n                            : <div><i onClick={sumaLike} className=\"far fa-heart\"></i>{itineraries.likes.length}</div>\r\n                        : <div><i onClick={() => alerta()} className=\"far fa-heart\"></i>{itineraries.likes.length}</div>\r\n                    }\r\n\r\n                    <div><MdTimer className=\"MdTimer\" /> : {(itineraries.hours)}</div>\r\n                    <div>Price: {Array(itineraries.price).fill(<MdAttachMoney className=\"MdAttachMoney\" />)}</div>\r\n                </div>\r\n\r\n                <div className=\"itinhashtag\">{itineraries.hashtag.map(hash => <p>{hash}</p>)}</div>\r\n            </div>\r\n\r\n            {visible &&\r\n                <>\r\n                    <div className=\"activities\">\r\n                        <div className=\"titleActivity\">Activities</div>\r\n                        <div className=\"containerActi\">\r\n                            {itineraries.activities.map(item => {\r\n                                return (\r\n                                    <div key={item._id} className=\"actiImg\" style={{\r\n                                        backgroundImage: `url(\"${item.activityImage}\")`,\r\n                                    }}><p>{item.activityTitle}</p></div>\r\n                                )\r\n                            })}\r\n                            <div className=\"container\">\r\n                                <p>See comments: </p>\r\n                                {itineraries.comments.map((commentt, i) => <Comment key={i} commentt={commentt} />)}\r\n                                <div className=\"contain\">\r\n                                    <input onChange={addComments} type=\"text\" name=\"comment\" placeholder=\"Add comment\" ></input>\r\n                                    <MdSend onClick={sendComment} />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n            <button className=\"buttonBack\" onClick={button}>{!visible ? \"View All\" : \"Close\"}</button>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usuarioRegistrado: state.auth.usuarioRegistrado,\r\n        comentario: state.itinerary.comentarios\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addFav: itineraryActions.addFav,\r\n    unFav: itineraryActions.unFav,\r\n    itinerariesById: itineraryActions.itinerariesById,\r\n    commentarie: itineraryActions.itineraryComment\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary)\r\n\r\n\r\n","L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Slide.js",[],"L:\\escritorio\\Repositorio\\pereyra-mytinerary\\frontend\\src\\components\\Comment.js",["118"],"import { useEffect,useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport itineraryActions from \"../redux/actions/itineraryActions\"\r\n\r\nconst Comment = ({commentt,listItineraries})=>{\r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"comments\">\r\n         <div className=\"comment\"style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <div className=\"userPic\"  style={{backgroundImage: `url(\"${commentt.userPic}\")`}}></div>\r\n            <p className=\"userName\" style={{fontWeight: 'bold'}}>{`${commentt.userName} say :`}</p>\r\n            <p className=\"content\" style={{marginTop: 0, marginLeft: 6}}>{commentt.comment}</p>\r\n        </div>\r\n    \r\n      </div>\r\n)\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        usuarioRegistrado: state.auth.usuarioRegistrado,\r\n        listItineraries: state.itinerary.listaItinerarios,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    commentarie:itineraryActions.itineraryComment\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Comment)\r\n",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":31,"column":9,"nodeType":"125","messageId":"126","endLine":31,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":2,"column":21,"nodeType":"125","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":14,"column":8,"nodeType":"132","endLine":14,"endColumn":10,"suggestions":"133"},{"ruleId":"123","severity":1,"message":"134","line":32,"column":13,"nodeType":"125","messageId":"126","endLine":32,"endColumn":18},{"ruleId":"127","severity":1,"message":"135","line":10,"column":12,"nodeType":"125","messageId":"129","endLine":10,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":49,"column":27,"nodeType":"125","messageId":"138","endLine":49,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":50,"column":32,"nodeType":"125","messageId":"138","endLine":50,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":67,"column":28,"nodeType":"125","messageId":"138","endLine":67,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":68,"column":27,"nodeType":"125","messageId":"138","endLine":68,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":69,"column":27,"nodeType":"125","messageId":"138","endLine":69,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":70,"column":24,"nodeType":"125","messageId":"138","endLine":70,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":71,"column":32,"nodeType":"125","messageId":"138","endLine":71,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":72,"column":25,"nodeType":"125","messageId":"138","endLine":72,"endColumn":33},{"ruleId":"139","severity":1,"message":"140","line":105,"column":83,"nodeType":"141","endLine":105,"endColumn":118},{"ruleId":"130","severity":1,"message":"142","line":25,"column":8,"nodeType":"132","endLine":25,"endColumn":10,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":18,"column":13,"nodeType":"146","messageId":"147","endLine":18,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":24,"column":13,"nodeType":"146","messageId":"147","endLine":24,"endColumn":18},{"ruleId":"127","severity":1,"message":"148","line":2,"column":10,"nodeType":"125","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":81,"column":67,"nodeType":"151","messageId":"152","endLine":81,"endColumn":69},{"ruleId":"127","severity":1,"message":"128","line":1,"column":20,"nodeType":"125","messageId":"129","endLine":1,"endColumn":28},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-redeclare","'routes' is already defined.","Identifier","redeclared","no-unused-vars","'useState' is defined but never used.","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allCities'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'links' is already defined.","'err' is assigned a value but never used.","no-use-before-define","'response' was used before it was defined.","usedBeforeDefined","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'id', 'itinerariesById', 'listaCities', and 'props.history'. Either include them or remove the dependency array.",["156"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'MdInsertDriveFile' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [allCities]",{"range":"161","text":"162"},"Update the dependencies array to be: [id, itinerariesById, listaCities, props.history]",{"range":"163","text":"164"},[513,515],"[allCities]",[842,844],"[id, itinerariesById, listaCities, props.history]"]